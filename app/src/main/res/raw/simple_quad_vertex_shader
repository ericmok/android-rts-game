uniform mat4 u_ProjectionMatrix;
uniform mat4 u_ModelMatrix;
uniform vec4 u_FlatColor;

uniform float u_ScalingX;
uniform float u_ScalingY;
uniform float u_Angle;
uniform float u_TranslationX;
uniform float u_TranslationY;

attribute vec4 a_Position;
attribute vec2 a_TexCoord;

varying vec4 v_Position;
varying vec2 v_TexCoord;

void main()
{
	v_Position = a_Position;
	v_TexCoord = a_TexCoord;

    vec4 tempPosition = a_Position;

    vec4 temp = tempPosition.xyzw;
    tempPosition.x = (cos(radians(u_Angle)) * tempPosition.x) - (sin(radians(u_Angle)) * tempPosition.y);
    tempPosition.y = (sin(radians(u_Angle)) * temp.x) + (cos(radians(u_Angle)) * temp.y);

    tempPosition.x = u_ScalingX * tempPosition.x;
    tempPosition.y = u_ScalingY * tempPosition.y;

    tempPosition.x = (tempPosition.x + u_TranslationX);
    tempPosition.y = (tempPosition.y + u_TranslationY);

    //tempPosition.w = 1;

	//vec4 temp = u_ProjectionMatrix * u_ModelMatrix * tempPosition;
	gl_Position = u_ProjectionMatrix * tempPosition;
}